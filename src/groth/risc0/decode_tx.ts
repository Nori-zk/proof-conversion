import assert from "assert"

const tx = "0x8b2829470000000000000000000000000000000000000000000000000000000000bc614e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000104310fe59824347dfbbac696b61f3a6bb2a407f0310c106bcdd04658a3745ee0054500c8c5057b623dbc4c2bfcb148445aba34356267a72113652b820ff8eb620519f198881cefe7273391ef5efb81321b5490ca00825cace44e44b9ea53e4659ac76eabd32e3502a35d37cbd4919863c279a53f27265d22b765391ea8b67e7bc6e94b39cc0a0ecbd1b6886132d44065749c488f65dc5c58d0389b02162a905cfb299d99ca264656fbdc4dcee63b670af767db40c11e84fe81e15e23ad867752d538821d722f3f9c069ef9bba4ec6c41791264fb085b5a09e42a4cad50be403c53bfc4ee7b0527e048886cc45a67f68ce51746cfc6bb9a734d252027e64d11fb5ed92600f300000000000000000000000000000000000000000000000000000000"

const checkSize = () => {
    // expected_length_in_bytes = 0x(2) + 4(selector) + 32(a.x) + 32(a.y) + 64(b.x) + 64(b.y) + 32(c.x) + 32(c.y) + 32(2 non hardcoded public inputs that we split)
    const expectedLength = 2 + 4 + 32 + 32 + 64 + 64 + 32 + 32 + 32
    // assert(tx.length === expectedLength)

    console.log(expectedLength)
    console.log(tx.length)
}

checkSize(); 