
import { FpC, FrC } from "../towers/index.js";

// taken from: https://github.com/succinctlabs/sp1-contracts/blob/main/contracts/src/v1.0.8-testnet/PlonkVerifier.sol

type Sp1PlonkVk = {
    pub_inputs: FrC,
    domain_size: number[],
    inv_domain_size: FrC,

    g1_gen_x: FpC, 
    g1_gen_y: FpC

    omega: FrC,

    ql_x: FpC,
    ql_y: FpC,

    qr_x: FpC,
    qr_y: FpC,

    qm_x: FpC,
    qm_y: FpC,

    qo_x: FpC,
    qo_y: FpC,

    qk_x: FpC,
    qk_y: FpC,

    qs1_x: FpC,
    qs1_y: FpC,

    qs2_x: FpC,
    qs2_y: FpC,

    qs3_x: FpC,
    qs3_y: FpC,

    coset_shift: FrC,

    qcp_0_x: FpC,
    qcp_0_y: FpC,

    index_commit_api_0: FrC,
    num_custom_gates: FrC


    // LAGRANGE FOR CUSTOM GATES PUBLIC INPUTS
    omega_pow_i: FrC, 
    omega_pow_i_div_n: FrC
}

const VK: Sp1PlonkVk = {
    pub_inputs: FrC.from(2n),
    domain_size: [1].concat(Array(26).fill(0)), // 67108864 = 2^26,
    inv_domain_size: FrC.from(21888242545679039938882419398440172875981108180010270949818755658014750055173n),

    g1_gen_x: FpC.from(14312776538779914388377568895031746459131577658076416373430523308756343304251n),
    g1_gen_y: FpC.from(11763105256161367503191792604679297387056316997144156930871823008787082098465n),

    omega: FrC.from(7419588552507395652481651088034484897579724952953562618697845598160172257810n),

    ql_x: FpC.from(14585543372410019003092143328009702539190296007679404836599959939969866838166n),
    ql_y: FpC.from(17722824277917999366546751581516521560604709882619404516618901119648408567644n),

    qr_x: FpC.from(10898091116425734967678806357954804971805650318410260176362236603111593070946n),
    qr_y: FpC.from(2924038286053928979399281209882141482034634465096220233633728805460582456630n),

    qm_x: FpC.from(2031048125815750610347533979665341648587796766028921135553237592603463331141n),
    qm_y: FpC.from(8155065622593766679535254109229393197593220466268704577946828046842494239503n),

    qo_x: FpC.from(5947740093533960953767408143123646997500725355604419790528882338800927905402n),
    qo_y: FpC.from(16526622583078899807158771486725089129936075882133814996745054899696208585050n),

    qk_x: FpC.from(119740621302450787001135488439015439349927647665033252743058387575629283276n),
    qk_y: FpC.from(13024371462468475459400360697703527331499004139216279341600910316411324286861n),

    qs1_x: FpC.from(10627327753818917257580031743580923447218792977466576262416509126412843282369n),
    qs1_y: FpC.from(18778204069629010711726992370860512366080746441266922837923685723716465874545n),

    qs2_x: FpC.from(4133742905916748837494066704724945614644731246453049829981019280272507803398n),
    qs2_y: FpC.from(6466467061148402844596596206135529025731346998429306278744231736980842648921n),

    qs3_x: FpC.from(8901602721884560254777014558991324752661207925612502603937647267620946902478n),
    qs3_y: FpC.from(2765992643976542253368180121378505606157970815510675049234608868732339659772n),

    coset_shift: FrC.from(5n),

    qcp_0_x: FpC.from(12771699097177619500468137065083938574724179973377295854993624477225534222388n),
    qcp_0_y: FpC.from(5757719256900570664017938361173180574878811923841521668906048492539193870622n),

    index_commit_api_0: FrC.from(32440323n),
    num_custom_gates: FrC.from(1n),

    // LAGRANGE FOR CUSTOM GATES PUBLIC INPUTS 
    omega_pow_i: FrC.from(15174808007818640786126860527240098588172000270512845465618945623147856003220n), 
    omega_pow_i_div_n: FrC.from(19836172057011781442486617392326384681342057712180112888849802481636629672885n)
}

export { Sp1PlonkVk, VK } 